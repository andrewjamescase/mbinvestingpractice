


const res = require('./fullResponseCoCaBs.json')

//var result =



//console.log(result)

var stockList = ["PG", "VZ", "MRK", "CMCSA", "ORCL", "NKE", "AMGN", "SBUX", "DHR", "BMY", "SYK", "MS", "CELG", "CI", "TGT", "AEP", "BIIB", "FISV", "DAL", "MFC", "ALL", "TRI", "HSY", "IQV", "LUV", "RACE", "DFS", "MCK", "ALXN", "FNMA", "CERN", "HIG", "SNPS", "KEYS", "CPRT", "CDNS", "CHD", "CDW", "HEI", "OMC", "LH", "HBAN", "HAS", "DISCA", "HOLX", "ALLY", "WRB", "LDOS", "FNF", "ARNC", "ZBRA", "OTEX", "RNG", "EQH", "WST", "URI", "BAH", "DVA", "AZPN", "ARCC", "VOYA", "AER", "HUBS", "FAF", "HAE", "CIEN", "ICL", "INXN", "ALSN", "MDU", "IART", "BPOP", "OMF", "EV", "FHN", "JBLU", "MTZ", "ESNT", "RDN", "AWI", "TTEK", "AGO", "FTDR", "SEDG", "AAN", "FCN", "SF", "FNB", "UMPQ", "JJSF", "LM", "GLOB", "ENPH", "FII", "CRUS", "MEDP", "HLI", "WAFD", "CATY", "FULT", "BAC", "BHC", "DFS", "ENTG", "FENY", "FHLC", "FITB", "FREL", "FUTY", "GM", "HUM", "IGLB", "IJR", "INTC", "PFE", "ROST"]


//console.log(result)

//for loop for company to output the javascript that gets the data and formats it as a sql insert statement
/*
for (let prop in stockList)
{
    if(prop == 0)
    {
        var result = 'INSERT INTO companyiex(symbol, companyName, exchange, industry, sector, CEO, securityName) VALUES(\'${res.' + stockList[prop] + '.company.symbol}\', \'${res.' + stockList[prop] + '.company.companyName}\', \'${res.' + stockList[prop] + '.company.exchange}\',\'${res.' + stockList[prop] + '.company.industry}\', \'${res.' + stockList[prop] + '.company.sector}\', \'${res.' + stockList[prop] + '.company.CEO}\', \'${res.' + stockList[prop] + '.company.securityName}\'),'
    }
    else if (prop == stockList.length-1)
    {
        var result = '(\'${res.' + stockList[prop] + '.company.symbol}\', \'${res.' + stockList[prop] + '.company.companyName}\', \'${res.' + stockList[prop] + '.company.exchange}\',\'${res.' + stockList[prop] + '.company.industry}\', \'${res.' + stockList[prop] + '.company.sector}\', \'${res.' + stockList[prop] + '.company.CEO}\', \'${res.' + stockList[prop] + '.company.securityName}\')'
    }
    else
    {
        var result = '(\'${res.' + stockList[prop] + '.company.symbol}\', \'${res.' + stockList[prop] + '.company.companyName}\', \'${res.' + stockList[prop] + '.company.exchange}\',\'${res.' + stockList[prop] + '.company.industry}\', \'${res.' + stockList[prop] + '.company.sector}\', \'${res.' + stockList[prop] + '.company.CEO}\', \'${res.' + stockList[prop] + '.company.securityName}\'),'
    }
   console.log(result)
}*/




//for loop for cash-flow
/*
for(let prop in stockList)
{
    
    if (prop == 0)
    {
        var result = 'INSERT INTO balancesheetiex(symbol, reportDate, netincome, depreciation, changesinreceivables, changesininventories, cashchange, cashflow, capitalexpenditures, investments, investingactivityother, totalinvestingcashflows, dividendspaid, netborrowings, otherfinancingcashflows, cashflowfinancing, exchangerateeffect), VALUES(\'${res.' + stockList[prop] + '.cashflowed.symbol}\', ${res.' + stockList[prop] + '.cashflowed.cashflow[0].reportDate}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].netIncome}, ${res.' + stockList[prop] + '.cashflowed.cashflow.depreciation}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInReceivables}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInInventories}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashChange}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlow}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].capitalExpenditures}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investments}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investingActivityOther}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].totalInvestingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].dividendsPaid}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].netBorrowings}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].otherFinancingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlowFinancing}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].exchangeRateEffect}),'
    }
    else if(prop == stockList.length-1)
    {
        var result = '(\'${res.' + stockList[prop] + '.cashflowed.symbol}\', \'${res.' + stockList[prop] + '.cashflowed.cashflow[0].reportDate}\', ${res.' + stockList[prop] + '.cashflowed.cashflow[0].netIncome}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].depreciation}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInReceivables}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInInventories}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashChange}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlow}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].capitalExpenditures}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investments}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investingActivityOther}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].totalInvestingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].dividendsPaid}, ${res.' + stockList[prop] + '.cashflowed.netBorrowings}, ${res.' + stockList[prop] + '.cashflowed.otherFinancingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlowFinancing}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].exchangeRateEffect})'
    }
    else{
        var result = '(\'${res.' + stockList[prop] + '.cashflowed.symbol}\', \'${res.' + stockList[prop] + '.cashflowed.cashflow[0].reportDate}\', ${res.' + stockList[prop] + '.cashflowed.cashflow[0].netIncome}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].depreciation}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInReceivables}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].changesInInventories}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashChange}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlow}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].capitalExpenditures}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investments}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].investingActivityOther}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].totalInvestingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].dividendsPaid}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].netBorrowings}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].otherFinancingCashFlows}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].cashFlowFinancing}, ${res.' + stockList[prop] + '.cashflowed.cashflow[0].exchangeRateEffect}),'
    }
    console.log(result)
}

*/

/*
for(let prop in stockList)
{
    
    if (prop == 0)
    {
        var result = 'INSERT INTO balancesheetiex(symbol, reportdate, currentcash, shortterminvestments, receivables, inventory, othercurrentassets, currentassets, longterminvestments, propertyplantequipment, goodwill, intangibleassets, otherassets, totalassets, accountspayable, currentlongtermdebt, othercurrentliabilities, totalcurrentliabilities, longtermdebt, otherliabilities, minorityinterest, totalliabilities, commonstock, retainedearnings, treasurystock, capitalsurplus, shareholderequity, nettangibleassets)VALUES (\'${res.' + stockList[prop] + '.balancedsheet.symbol}\', \'${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].reportDate}\', ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentCash}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shortTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].receivables}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].inventory}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].propertyPlantEquipment}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].goodwill}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].intangibleAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].accountsPayable}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentLongTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].minorityInterest}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].commonStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].retainedEarnings}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].treasuryStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].capitalSurplus}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shareholderEquity}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].netTangibleAssets}),'
    }
    else if(prop == stockList.length-1)
    {
        var result = '(\'${res.' + stockList[prop] + '.balancedsheet.symbol}\', \'${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].reportDate}\', ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentCash}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shortTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].receivables}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].inventory}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].propertyPlantEquipment}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].goodwill}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].intangibleAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].accountsPayable}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentLongTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].minorityInterest}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].commonStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].retainedEarnings}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].treasuryStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].capitalSurplus}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shareholderEquity}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].netTangibleAssets})'
    }
    else{
        var result ='(\'${res.' + stockList[prop] + '.balancedsheet.symbol}\', \'${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].reportDate}\', ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentCash}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shortTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].receivables}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].inventory}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermInvestments}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].propertyPlantEquipment}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].goodwill}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].intangibleAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalAssets}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].accountsPayable}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].currentLongTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalCurrentLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].longTermDebt}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].otherLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].minorityInterest}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].totalLiabilities}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].commonStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].retainedEarnings}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].treasuryStock}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].capitalSurplus}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].shareholderEquity}, ${res.' + stockList[prop] + '.balancedsheet.balancesheet[0].netTangibleAssets}),'
    }
    console.log(result)
}
*/
//key stats
/*
for(let prop in stockList)
{
    
    if (prop == 0)
    {
        var result = 'INSERT INTO keystatsiex(symbol, marketcap, week52high, week52low, week52change, sharesoutstanding, float, avg10volume, avg30volume, day200movingavg, day50movingavg, employees, ttmeps, ttmdividendrate, dividendyield, nextdividenddate, exdividenddate, nextearningsdate, peratio, beta, maxchangepercent, year5changepercent, year2changepercent, year1changepercent, ytdchangepercent, month6changepercent, month3changepercent)VALUES (\''+ stockList[prop] + '\', ${res.' + stockList[prop] + '.stats.marketcap}, ${res.' + stockList[prop] + '.stats.week52high}, ${res.' + stockList[prop] + '.stats.week52low}, ${res.' + stockList[prop] + '.stats.week52change}, ${res.' + stockList[prop] + '.stats.sharesOutstanding}, ${res.' + stockList[prop] + '.stats.float}, ${res.' + stockList[prop] + '.stats.avg10Volume}, ${res.' + stockList[prop] + '.stats.avg30Volume}, ${res.' + stockList[prop] + '.stats.day200MovingAvg}, ${res.' + stockList[prop] + '.stats.day50MovingAvg}, ${res.' + stockList[prop] + '.stats.employees}, ${res.' + stockList[prop] + '.stats.ttmEPS}, ${res.' + stockList[prop] + '.stats.ttmDividendRate}, ${res.' + stockList[prop] + '.stats.dividendYield}, \'${res.' + stockList[prop] + '.stats.nextDividendDate}\', \'${res.' + stockList[prop] + '.stats.exDividendDate}\', \'${res.' + stockList[prop] + '.stats.nextEarningsDate}\', ${res.' + stockList[prop] + '.stats.peRatio}, ${res.' + stockList[prop] + '.stats.beta}, ${res.' + stockList[prop] + '.stats.maxChangePercent}, ${res.' + stockList[prop] + '.stats.year5ChangePercent}, ${res.' + stockList[prop] + '.stats.year2ChangePercent}, ${res.' + stockList[prop] + '.stats.year1ChangePercent}, ${res.' + stockList[prop] + '.stats.ytdChangePercent}, ${res.' + stockList[prop] + '.stats.month6ChangePercent}, ${res.' + stockList[prop] + '.stats.month3ChangePercent}),'
    }
    else if(prop == stockList.length-1)
    {
        var result = '(\''+ stockList[prop] + '\', ${res.' + stockList[prop] + '.stats.marketcap}, ${res.' + stockList[prop] + '.stats.week52high}, ${res.' + stockList[prop] + '.stats.week52low}, ${res.' + stockList[prop] + '.stats.week52change}, ${res.' + stockList[prop] + '.stats.sharesOutstanding}, ${res.' + stockList[prop] + '.stats.float}, ${res.' + stockList[prop] + '.stats.avg10Volume}, ${res.' + stockList[prop] + '.stats.avg30Volume}, ${res.' + stockList[prop] + '.stats.day200MovingAvg}, ${res.' + stockList[prop] + '.stats.day50MovingAvg}, ${res.' + stockList[prop] + '.stats.employees}, ${res.' + stockList[prop] + '.stats.ttmEPS}, ${res.' + stockList[prop] + '.stats.ttmDividendRate}, ${res.' + stockList[prop] + '.stats.dividendYield}, \'${res.' + stockList[prop] + '.stats.nextDividendDate}\', \'${res.' + stockList[prop] + '.stats.exDividendDate}\', \'${res.' + stockList[prop] + '.stats.nextEarningsDate}\', ${res.' + stockList[prop] + '.stats.peRatio}, ${res.' + stockList[prop] + '.stats.beta}, ${res.' + stockList[prop] + '.stats.maxChangePercent}, ${res.' + stockList[prop] + '.stats.year5ChangePercent}, ${res.' + stockList[prop] + '.stats.year2ChangePercent}, ${res.' + stockList[prop] + '.stats.year1ChangePercent}, ${res.' + stockList[prop] + '.stats.ytdChangePercent}, ${res.' + stockList[prop] + '.stats.month6ChangePercent}, ${res.' + stockList[prop] + '.stats.month3ChangePercent})'
    }
    else{
        var result ='(\''+ stockList[prop] + '\', ${res.' + stockList[prop] + '.stats.marketcap}, ${res.' + stockList[prop] + '.stats.week52high}, ${res.' + stockList[prop] + '.stats.week52low}, ${res.' + stockList[prop] + '.stats.week52change}, ${res.' + stockList[prop] + '.stats.sharesOutstanding}, ${res.' + stockList[prop] + '.stats.float}, ${res.' + stockList[prop] + '.stats.avg10Volume}, ${res.' + stockList[prop] + '.stats.avg30Volume}, ${res.' + stockList[prop] + '.stats.day200MovingAvg}, ${res.' + stockList[prop] + '.stats.day50MovingAvg}, ${res.' + stockList[prop] + '.stats.employees}, ${res.' + stockList[prop] + '.stats.ttmEPS}, ${res.' + stockList[prop] + '.stats.ttmDividendRate}, ${res.' + stockList[prop] + '.stats.dividendYield}, \'${res.' + stockList[prop] + '.stats.nextDividendDate}\', \'${res.' + stockList[prop] + '.stats.exDividendDate}\', \'${res.' + stockList[prop] + '.stats.nextEarningsDate}\', ${res.' + stockList[prop] + '.stats.peRatio}, ${res.' + stockList[prop] + '.stats.beta}, ${res.' + stockList[prop] + '.stats.maxChangePercent}, ${res.' + stockList[prop] + '.stats.year5ChangePercent}, ${res.' + stockList[prop] + '.stats.year2ChangePercent}, ${res.' + stockList[prop] + '.stats.year1ChangePercent}, ${res.' + stockList[prop] + '.stats.ytdChangePercent}, ${res.' + stockList[prop] + '.stats.month6ChangePercent}, ${res.' + stockList[prop] + '.stats.month3ChangePercent}),'
    }
    console.log(result)
}*/

for(let prop in stockList)
{
    
    if (prop == 0)
    {
        var result = 'INSERT INTO incomestatementiex(symbol, reportdate, totalrevenue, costofrevenue, grossprofit, researchanddevelopment, sellinggeneralandadmin, operatingexpense, operatingincome, otherincomeexpensenet, ebit, interestincome, pretaxincome, incometax, minorityinterest, netincome, netincomebasic)VALUES (\'${res.' + stockList[prop] + '.income.symbol}\', \'${res.' + stockList[prop] + '.income.income[0].reportDate}\', ${res.' + stockList[prop] + '.income.income[0].totalRevenue}, ${res.' + stockList[prop] + '.income.income[0].costOfRevenue}, ${res.' + stockList[prop] + '.income.income[0].grossProfit}, ${res.' + stockList[prop] + '.income.income[0].researchAndDevelopment}, ${res.' + stockList[prop] + '.income.income[0].sellingGeneralAndAdmin}, ${res.' + stockList[prop] + '.income.income[0].operatingExpense}, ${res.' + stockList[prop] + '.income.income[0].operatingIncome}, ${res.' + stockList[prop] + '.income.income[0].otherIncomeExpenseNet}, ${res.' + stockList[prop] + '.income.income[0].ebit}, ${res.' + stockList[prop] + '.income.income[0].interestIncome}, ${res.' + stockList[prop] + '.income.income[0].pretaxIncome}, ${res.' + stockList[prop] + '.income.income[0].incomeTax}, ${res.' + stockList[prop] + '.income.income[0].minorityInterest}, ${res.' + stockList[prop] + '.income.income[0].netIncome}, ${res.' + stockList[prop] + '.income.income[0].netIncomeBasic}),'
    }
    else if(prop == stockList.length-1)
    {
        var result = '(\'${res.' + stockList[prop] + '.income.symbol}\', \'${res.' + stockList[prop] + '.income.income[0].reportDate}\', ${res.' + stockList[prop] + '.income.income[0].totalRevenue}, ${res.' + stockList[prop] + '.income.income[0].costOfRevenue}, ${res.' + stockList[prop] + '.income.income[0].grossProfit}, ${res.' + stockList[prop] + '.income.income[0].researchAndDevelopment}, ${res.' + stockList[prop] + '.income.income[0].sellingGeneralAndAdmin}, ${res.' + stockList[prop] + '.income.income[0].operatingExpense}, ${res.' + stockList[prop] + '.income.income[0].operatingIncome}, ${res.' + stockList[prop] + '.income.income[0].otherIncomeExpenseNet}, ${res.' + stockList[prop] + '.income.income[0].ebit}, ${res.' + stockList[prop] + '.income.income[0].interestIncome}, ${res.' + stockList[prop] + '.income.income[0].pretaxIncome}, ${res.' + stockList[prop] + '.income.income[0].incomeTax}, ${res.' + stockList[prop] + '.income.income[0].minorityInterest}, ${res.' + stockList[prop] + '.income.income[0].netIncome}, ${res.' + stockList[prop] + '.income.income[0].netIncomeBasic})'
    }
    else{
        var result ='(\'${res.' + stockList[prop] + '.income.symbol}\', \'${res.' + stockList[prop] + '.income.income[0].reportDate}\', ${res.' + stockList[prop] + '.income.income[0].totalRevenue}, ${res.' + stockList[prop] + '.income.income[0].costOfRevenue}, ${res.' + stockList[prop] + '.income.income[0].grossProfit}, ${res.' + stockList[prop] + '.income.income[0].researchAndDevelopment}, ${res.' + stockList[prop] + '.income.income[0].sellingGeneralAndAdmin}, ${res.' + stockList[prop] + '.income.income[0].operatingExpense}, ${res.' + stockList[prop] + '.income.income[0].operatingIncome}, ${res.' + stockList[prop] + '.income.income[0].otherIncomeExpenseNet}, ${res.' + stockList[prop] + '.income.income[0].ebit}, ${res.' + stockList[prop] + '.income.income[0].interestIncome}, ${res.' + stockList[prop] + '.income.income[0].pretaxIncome}, ${res.' + stockList[prop] + '.income.income[0].incomeTax}, ${res.' + stockList[prop] + '.income.income[0].minorityInterest}, ${res.' + stockList[prop] + '.income.income[0].netIncome}, ${res.' + stockList[prop] + '.income.income[0].netIncomeBasic}),'
    }
    console.log(result)
}